////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Add8bits.vf
// /___/   /\     Timestamp : 11/06/2022 16:16:29
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog D:/DigitalSystem/Lab/Lab9/Add8bits.vf -w D:/DigitalSystem/Lab/Lab9/Add8bits.sch
//Design Name: Add8bits
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module ADSU8_HXILINX_Add8bits (CO, OFL, S, A, ADD, B, CI);

   
   output             CO;
   output             OFL;
   output [7:0]       S;

   input  [7:0]       A;
   input  	      ADD;
   input  [7:0]       B;
   input              CI;

   reg    [8:0]       adsu_tmp;  

   always @ (A, ADD, B, CI) 
   begin
      if(ADD)
         adsu_tmp = A + B + CI;
      else
         adsu_tmp = A - (!CI) - B;
   end

   assign S   =  adsu_tmp[7:0];
   assign CO  =  ADD ? adsu_tmp[8] : ~adsu_tmp[8];
   assign OFL =  ADD ? ( (A[7] & B[7] & (~S[7])) | ((~A[7]) & (~B[7]) & S[7]) ) : ( (A[7] & (~B[7]) & (~S[7])) | ((~A[7]) & B[7] & S[7]) );

endmodule
`timescale 1ns / 1ps

module Add8bits(A, 
                B, 
                S);

    input [7:0] A;
    input [7:0] B;
   output [7:0] S;
   
   wire XLXN_1;
   wire XLXN_2;
   
   (* HU_SET = "XLXI_1_2" *) 
   ADSU8_HXILINX_Add8bits  XLXI_1 (.A(A[7:0]), 
                                  .ADD(XLXN_2), 
                                  .B(B[7:0]), 
                                  .CI(XLXN_1), 
                                  .CO(), 
                                  .OFL(), 
                                  .S(S[7:0]));
   GND  XLXI_2 (.G(XLXN_1));
   VCC  XLXI_3 (.P(XLXN_2));
endmodule
