////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Display.vf
// /___/   /\     Timestamp : 11/06/2022 16:16:31
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog D:/DigitalSystem/Lab/Lab9/Display.vf -w D:/DigitalSystem/Lab/Lab9/Display.sch
//Design Name: Display
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FJKC_HXILINX_Display(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale  100 ps / 10 ps

module D2_4E_HXILINX_Display (D0, D1, D2, D3, A0, A1, E);
    

   output D0;
   output D1;
   output D2;
   output D3;

   input  A0;
   input  A1;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;

      always @ (A0 or A1 or E)
      begin
         if(!E)
           {D3, D2, D1, D0} <= 4'b0000;
        else
        begin
           case({A1,A0})
             2'b00 : {D3,D2,D1,D0} <= 4'b0001;
             2'b01 : {D3,D2,D1,D0} <= 4'b0010;
             2'b10 : {D3,D2,D1,D0} <= 4'b0100;
             2'b11 : {D3,D2,D1,D0} <= 4'b1000;
          endcase
        end
     end 

endmodule
`timescale  100 ps / 10 ps

module M2_1_HXILINX_Display (O, D0, D1, S0);
    

   output O;

   input  D0;
   input  D1;
   input  S0;

   reg O;

   always @ ( D0 or D1 or S0)
   begin
      case(S0)
      1'b0 : O <= D0;
      1'b1 : O <= D1;
      endcase
   end
    
endmodule
`timescale 1ns / 1ps

module Decoder1_2_MUSER_Display(I, 
                                Common);

    input I;
   output [1:0] Common;
   
   wire XLXN_12;
   wire XLXN_15;
   
   (* HU_SET = "XLXI_3_28" *) 
   D2_4E_HXILINX_Display  XLXI_3 (.A0(I), 
                                 .A1(XLXN_12), 
                                 .E(XLXN_15), 
                                 .D0(Common[1]), 
                                 .D1(Common[0]), 
                                 .D2(), 
                                 .D3());
   GND  XLXI_4 (.G(XLXN_12));
   VCC  XLXI_5 (.P(XLXN_15));
endmodule
`timescale 1ns / 1ps

module MUX8_4_MUSER_Display(D0, 
                            D1, 
                            Sel, 
                            O);

    input [3:0] D0;
    input [3:0] D1;
    input Sel;
   output [3:0] O;
   
   
   (* HU_SET = "XLXI_1_29" *) 
   M2_1_HXILINX_Display  XLXI_1 (.D0(D0[3]), 
                                .D1(D1[3]), 
                                .S0(Sel), 
                                .O(O[3]));
   (* HU_SET = "XLXI_2_30" *) 
   M2_1_HXILINX_Display  XLXI_2 (.D0(D0[2]), 
                                .D1(D1[2]), 
                                .S0(Sel), 
                                .O(O[2]));
   (* HU_SET = "XLXI_3_31" *) 
   M2_1_HXILINX_Display  XLXI_3 (.D0(D0[1]), 
                                .D1(D1[1]), 
                                .S0(Sel), 
                                .O(O[1]));
   (* HU_SET = "XLXI_4_32" *) 
   M2_1_HXILINX_Display  XLXI_4 (.D0(D0[0]), 
                                .D1(D1[0]), 
                                .S0(Sel), 
                                .O(O[0]));
endmodule
`timescale 1ns / 1ps

module Display(CLK, 
               D0, 
               D1, 
               a, 
               b, 
               c, 
               Common, 
               Common2, 
               Common3, 
               d, 
               e, 
               f, 
               g);

    input CLK;
    input [3:0] D0;
    input [3:0] D1;
   output a;
   output b;
   output c;
   output [1:0] Common;
   output Common2;
   output Common3;
   output d;
   output e;
   output f;
   output g;
   
   wire [3:0] O;
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_5;
   
   MUX8_4_MUSER_Display  XLXI_1 (.D0(D0[3:0]), 
                                .D1(D1[3:0]), 
                                .Sel(XLXN_5), 
                                .O(O[3:0]));
   BCHextoSegment  XLXI_2 (.Q0(O[0]), 
                          .Q1(O[1]), 
                          .Q2(O[2]), 
                          .Q3(O[3]), 
                          .a(a), 
                          .b(b), 
                          .c(c), 
                          .d(d), 
                          .e(e), 
                          .f(f), 
                          .g(g));
   Decoder1_2_MUSER_Display  XLXI_3 (.I(XLXN_5), 
                                    .Common(Common[1:0]));
   GND  XLXI_5 (.G(XLXN_1));
   VCC  XLXI_6 (.P(XLXN_2));
   (* HU_SET = "XLXI_7_33" *) 
   FJKC_HXILINX_Display  XLXI_7 (.C(CLK), 
                                .CLR(XLXN_1), 
                                .J(XLXN_2), 
                                .K(XLXN_2), 
                                .Q(XLXN_5));
   VCC  XLXI_8 (.P(Common2));
   VCC  XLXI_10 (.P(Common3));
endmodule
