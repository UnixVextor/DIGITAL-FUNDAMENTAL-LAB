////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Lab9.vf
// /___/   /\     Timestamp : 11/06/2022 16:16:31
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog D:/DigitalSystem/Lab/Lab9/Lab9.vf -w D:/DigitalSystem/Lab/Lab9/Lab9.sch
//Design Name: Lab9
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module ADSU8_HXILINX_Lab9 (CO, OFL, S, A, ADD, B, CI);

   
   output             CO;
   output             OFL;
   output [7:0]       S;

   input  [7:0]       A;
   input  	      ADD;
   input  [7:0]       B;
   input              CI;

   reg    [8:0]       adsu_tmp;  

   always @ (A, ADD, B, CI) 
   begin
      if(ADD)
         adsu_tmp = A + B + CI;
      else
         adsu_tmp = A - (!CI) - B;
   end

   assign S   =  adsu_tmp[7:0];
   assign CO  =  ADD ? adsu_tmp[8] : ~adsu_tmp[8];
   assign OFL =  ADD ? ( (A[7] & B[7] & (~S[7])) | ((~A[7]) & (~B[7]) & S[7]) ) : ( (A[7] & (~B[7]) & (~S[7])) | ((~A[7]) & B[7] & S[7]) );

endmodule
`timescale  100 ps / 10 ps

module M4_1E_HXILINX_Lab9 (O, D0, D1, D2, D3, E, S0, S1);
    

   output O;

   input  D0;
   input  D1;
   input  D2;
   input  D3;
   input  E;
   input  S0;
   input  S1;

   reg O;

   always @ ( D0 or D1 or D2 or D3 or E or S0 or S1)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case({S1,S0})
        2'b00 : O <= D0;
        2'b01 : O <= D1;
        2'b10 : O <= D2;
        2'b11 : O <= D3;
        endcase
      end
   end
    
endmodule
`timescale 100 ps / 10 ps

module FJKC_HXILINX_Lab9(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale  100 ps / 10 ps

module D2_4E_HXILINX_Lab9 (D0, D1, D2, D3, A0, A1, E);
    

   output D0;
   output D1;
   output D2;
   output D3;

   input  A0;
   input  A1;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;

      always @ (A0 or A1 or E)
      begin
         if(!E)
           {D3, D2, D1, D0} <= 4'b0000;
        else
        begin
           case({A1,A0})
             2'b00 : {D3,D2,D1,D0} <= 4'b0001;
             2'b01 : {D3,D2,D1,D0} <= 4'b0010;
             2'b10 : {D3,D2,D1,D0} <= 4'b0100;
             2'b11 : {D3,D2,D1,D0} <= 4'b1000;
          endcase
        end
     end 

endmodule
`timescale  100 ps / 10 ps

module M2_1_HXILINX_Lab9 (O, D0, D1, S0);
    

   output O;

   input  D0;
   input  D1;
   input  S0;

   reg O;

   always @ ( D0 or D1 or S0)
   begin
      case(S0)
      1'b0 : O <= D0;
      1'b1 : O <= D1;
      endcase
   end
    
endmodule
`timescale 1ns / 1ps

module Decoder1_2_MUSER_Lab9(I, 
                             Common);

    input I;
   output [1:0] Common;
   
   wire XLXN_12;
   wire XLXN_15;
   
   (* HU_SET = "XLXI_3_12" *) 
   D2_4E_HXILINX_Lab9  XLXI_3 (.A0(I), 
                              .A1(XLXN_12), 
                              .E(XLXN_15), 
                              .D0(Common[1]), 
                              .D1(Common[0]), 
                              .D2(), 
                              .D3());
   GND  XLXI_4 (.G(XLXN_12));
   VCC  XLXI_5 (.P(XLXN_15));
endmodule
`timescale 1ns / 1ps

module MUX8_4_MUSER_Lab9(D0, 
                         D1, 
                         Sel, 
                         O);

    input [3:0] D0;
    input [3:0] D1;
    input Sel;
   output [3:0] O;
   
   
   (* HU_SET = "XLXI_1_13" *) 
   M2_1_HXILINX_Lab9  XLXI_1 (.D0(D0[3]), 
                             .D1(D1[3]), 
                             .S0(Sel), 
                             .O(O[3]));
   (* HU_SET = "XLXI_2_14" *) 
   M2_1_HXILINX_Lab9  XLXI_2 (.D0(D0[2]), 
                             .D1(D1[2]), 
                             .S0(Sel), 
                             .O(O[2]));
   (* HU_SET = "XLXI_3_15" *) 
   M2_1_HXILINX_Lab9  XLXI_3 (.D0(D0[1]), 
                             .D1(D1[1]), 
                             .S0(Sel), 
                             .O(O[1]));
   (* HU_SET = "XLXI_4_16" *) 
   M2_1_HXILINX_Lab9  XLXI_4 (.D0(D0[0]), 
                             .D1(D1[0]), 
                             .S0(Sel), 
                             .O(O[0]));
endmodule
`timescale 1ns / 1ps

module Display_MUSER_Lab9(CLK, 
                          D0, 
                          D1, 
                          a, 
                          b, 
                          c, 
                          Common, 
                          Common2, 
                          Common3, 
                          d, 
                          e, 
                          f, 
                          g);

    input CLK;
    input [3:0] D0;
    input [3:0] D1;
   output a;
   output b;
   output c;
   output [1:0] Common;
   output Common2;
   output Common3;
   output d;
   output e;
   output f;
   output g;
   
   wire [3:0] O;
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_5;
   
   MUX8_4_MUSER_Lab9  XLXI_1 (.D0(D0[3:0]), 
                             .D1(D1[3:0]), 
                             .Sel(XLXN_5), 
                             .O(O[3:0]));
   BCHextoSegment  XLXI_2 (.Q0(O[0]), 
                          .Q1(O[1]), 
                          .Q2(O[2]), 
                          .Q3(O[3]), 
                          .a(a), 
                          .b(b), 
                          .c(c), 
                          .d(d), 
                          .e(e), 
                          .f(f), 
                          .g(g));
   Decoder1_2_MUSER_Lab9  XLXI_3 (.I(XLXN_5), 
                                 .Common(Common[1:0]));
   GND  XLXI_5 (.G(XLXN_1));
   VCC  XLXI_6 (.P(XLXN_2));
   (* HU_SET = "XLXI_7_17" *) 
   FJKC_HXILINX_Lab9  XLXI_7 (.C(CLK), 
                             .CLR(XLXN_1), 
                             .J(XLXN_2), 
                             .K(XLXN_2), 
                             .Q(XLXN_5));
   VCC  XLXI_8 (.P(Common2));
   VCC  XLXI_10 (.P(Common3));
endmodule
`timescale 1ns / 1ps

module MUX32_8_MUSER_Lab9(D0, 
                          D1, 
                          D2, 
                          D3, 
                          Sel, 
                          O);

    input [7:0] D0;
    input [7:0] D1;
    input [7:0] D2;
    input [7:0] D3;
    input [1:0] Sel;
   output [7:0] O;
   
   wire XLXN_62;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_69;
   
   (* HU_SET = "XLXI_9_18" *) 
   M4_1E_HXILINX_Lab9  XLXI_9 (.D0(D0[0]), 
                              .D1(D1[0]), 
                              .D2(D2[0]), 
                              .D3(D3[0]), 
                              .E(XLXN_69), 
                              .S0(Sel[0]), 
                              .S1(Sel[1]), 
                              .O(O[0]));
   (* HU_SET = "XLXI_10_19" *) 
   M4_1E_HXILINX_Lab9  XLXI_10 (.D0(D0[1]), 
                               .D1(D1[1]), 
                               .D2(D2[1]), 
                               .D3(D3[1]), 
                               .E(XLXN_68), 
                               .S0(Sel[0]), 
                               .S1(Sel[1]), 
                               .O(O[1]));
   (* HU_SET = "XLXI_11_20" *) 
   M4_1E_HXILINX_Lab9  XLXI_11 (.D0(D0[2]), 
                               .D1(D1[2]), 
                               .D2(D2[2]), 
                               .D3(D3[2]), 
                               .E(XLXN_67), 
                               .S0(Sel[0]), 
                               .S1(Sel[1]), 
                               .O(O[2]));
   (* HU_SET = "XLXI_12_21" *) 
   M4_1E_HXILINX_Lab9  XLXI_12 (.D0(D0[3]), 
                               .D1(D1[3]), 
                               .D2(D2[3]), 
                               .D3(D3[3]), 
                               .E(XLXN_66), 
                               .S0(Sel[0]), 
                               .S1(Sel[1]), 
                               .O(O[3]));
   (* HU_SET = "XLXI_13_22" *) 
   M4_1E_HXILINX_Lab9  XLXI_13 (.D0(D0[4]), 
                               .D1(D1[4]), 
                               .D2(D2[4]), 
                               .D3(D3[4]), 
                               .E(XLXN_65), 
                               .S0(Sel[0]), 
                               .S1(Sel[1]), 
                               .O(O[4]));
   (* HU_SET = "XLXI_14_23" *) 
   M4_1E_HXILINX_Lab9  XLXI_14 (.D0(D0[5]), 
                               .D1(D1[5]), 
                               .D2(D2[5]), 
                               .D3(D3[5]), 
                               .E(XLXN_64), 
                               .S0(Sel[0]), 
                               .S1(Sel[1]), 
                               .O(O[5]));
   (* HU_SET = "XLXI_15_24" *) 
   M4_1E_HXILINX_Lab9  XLXI_15 (.D0(D0[6]), 
                               .D1(D1[6]), 
                               .D2(D2[6]), 
                               .D3(D3[6]), 
                               .E(XLXN_63), 
                               .S0(Sel[0]), 
                               .S1(Sel[1]), 
                               .O(O[6]));
   (* HU_SET = "XLXI_16_25" *) 
   M4_1E_HXILINX_Lab9  XLXI_16 (.D0(D0[7]), 
                               .D1(D1[7]), 
                               .D2(D2[7]), 
                               .D3(D3[7]), 
                               .E(XLXN_62), 
                               .S0(Sel[0]), 
                               .S1(Sel[1]), 
                               .O(O[7]));
   VCC  XLXI_17 (.P(XLXN_62));
   VCC  XLXI_18 (.P(XLXN_63));
   VCC  XLXI_19 (.P(XLXN_64));
   VCC  XLXI_20 (.P(XLXN_65));
   VCC  XLXI_21 (.P(XLXN_66));
   VCC  XLXI_22 (.P(XLXN_67));
   VCC  XLXI_23 (.P(XLXN_68));
   VCC  XLXI_24 (.P(XLXN_69));
endmodule
`timescale 1ns / 1ps

module SHL8bits_MUSER_Lab9(A, 
                           O);

    input [7:0] A;
   output [7:0] O;
   
   
   GND  XLXI_4 (.G(O[0]));
   BUF  XLXI_5_0 (.I(A[0]), 
                 .O(O[1]));
   BUF  XLXI_5_1 (.I(A[1]), 
                 .O(O[2]));
   BUF  XLXI_5_2 (.I(A[2]), 
                 .O(O[3]));
   BUF  XLXI_5_3 (.I(A[3]), 
                 .O(O[4]));
   BUF  XLXI_5_4 (.I(A[4]), 
                 .O(O[5]));
   BUF  XLXI_5_5 (.I(A[5]), 
                 .O(O[6]));
   BUF  XLXI_5_6 (.I(A[6]), 
                 .O(O[7]));
endmodule
`timescale 1ns / 1ps

module XOR8bits_MUSER_Lab9(A, 
                           B, 
                           S);

    input [7:0] A;
    input [7:0] B;
   output [7:0] S;
   
   
   XOR2  XLXI_1 (.I0(B[0]), 
                .I1(A[0]), 
                .O(S[0]));
   XOR2  XLXI_2 (.I0(B[1]), 
                .I1(A[1]), 
                .O(S[1]));
   XOR2  XLXI_3 (.I0(B[2]), 
                .I1(A[2]), 
                .O(S[2]));
   XOR2  XLXI_4 (.I0(B[3]), 
                .I1(A[3]), 
                .O(S[3]));
   XOR2  XLXI_5 (.I0(B[4]), 
                .I1(A[4]), 
                .O(S[4]));
   XOR2  XLXI_6 (.I0(B[5]), 
                .I1(A[5]), 
                .O(S[5]));
   XOR2  XLXI_7 (.I0(B[6]), 
                .I1(A[6]), 
                .O(S[6]));
   XOR2  XLXI_8 (.I0(B[7]), 
                .I1(A[7]), 
                .O(S[7]));
endmodule
`timescale 1ns / 1ps

module subtract8bits_MUSER_Lab9(A, 
                                B, 
                                S);

    input [7:0] A;
    input [7:0] B;
   output [7:0] S;
   
   wire XLXN_1;
   wire XLXN_2;
   
   (* HU_SET = "XLXI_1_26" *) 
   ADSU8_HXILINX_Lab9  XLXI_1 (.A(A[7:0]), 
                              .ADD(XLXN_2), 
                              .B(B[7:0]), 
                              .CI(XLXN_1), 
                              .CO(), 
                              .OFL(), 
                              .S(S[7:0]));
   GND  XLXI_4 (.G(XLXN_2));
   VCC  XLXI_5 (.P(XLXN_1));
endmodule
`timescale 1ns / 1ps

module Add8bits_MUSER_Lab9(A, 
                           B, 
                           S);

    input [7:0] A;
    input [7:0] B;
   output [7:0] S;
   
   wire XLXN_1;
   wire XLXN_2;
   
   (* HU_SET = "XLXI_1_27" *) 
   ADSU8_HXILINX_Lab9  XLXI_1 (.A(A[7:0]), 
                              .ADD(XLXN_2), 
                              .B(B[7:0]), 
                              .CI(XLXN_1), 
                              .CO(), 
                              .OFL(), 
                              .S(S[7:0]));
   GND  XLXI_2 (.G(XLXN_1));
   VCC  XLXI_3 (.P(XLXN_2));
endmodule
`timescale 1ns / 1ps

module Lab9(A, 
            B, 
            CLK, 
            SW_MODE, 
            a, 
            b, 
            c, 
            Common, 
            Common2, 
            Common3, 
            d, 
            e, 
            f, 
            g, 
            LED0, 
            LED1, 
            LED2, 
            LED3);

    input [7:0] A;
    input [7:0] B;
    input CLK;
    input SW_MODE;
   output a;
   output b;
   output c;
   output [1:0] Common;
   output Common2;
   output Common3;
   output d;
   output e;
   output f;
   output g;
   output LED0;
   output LED1;
   output LED2;
   output LED3;
   
   wire [7:0] O;
   wire [7:0] XLXN_15;
   wire [7:0] XLXN_16;
   wire [7:0] XLXN_17;
   wire [7:0] XLXN_18;
   wire XLXN_20;
   wire XLXN_40;
   wire XLXN_41;
   wire [1:0] XLXN_42;
   
   Add8bits_MUSER_Lab9  XLXI_8 (.A(A[7:0]), 
                               .B(B[7:0]), 
                               .S(XLXN_15[7:0]));
   subtract8bits_MUSER_Lab9  XLXI_9 (.A(A[7:0]), 
                                    .B(B[7:0]), 
                                    .S(XLXN_16[7:0]));
   XOR8bits_MUSER_Lab9  XLXI_10 (.A(A[7:0]), 
                                .B(B[7:0]), 
                                .S(XLXN_17[7:0]));
   SHL8bits_MUSER_Lab9  XLXI_11 (.A(A[7:0]), 
                                .O(XLXN_18[7:0]));
   MUX32_8_MUSER_Lab9  XLXI_12 (.D0(XLXN_15[7:0]), 
                               .D1(XLXN_16[7:0]), 
                               .D2(XLXN_17[7:0]), 
                               .D3(XLXN_18[7:0]), 
                               .Sel(XLXN_42[1:0]), 
                               .O(O[7:0]));
   Display_MUSER_Lab9  XLXI_13 (.CLK(XLXN_20), 
                               .D0(O[3:0]), 
                               .D1(O[7:4]), 
                               .a(a), 
                               .b(b), 
                               .c(c), 
                               .Common(Common[1:0]), 
                               .Common2(Common2), 
                               .Common3(Common3), 
                               .d(d), 
                               .e(e), 
                               .f(f), 
                               .g(g));
   div100k  XLXI_14 (.IP(CLK), 
                    .OP(XLXN_20));
   Counter0_3  XLXI_15 (.CLK(XLXN_40), 
                       .LED0(LED0), 
                       .LED1(LED1), 
                       .LED2(LED2), 
                       .LED3(LED3), 
                       .O(XLXN_42[1:0]));
   AND2  XLXI_18 (.I0(SW_MODE), 
                 .I1(XLXN_41), 
                 .O(XLXN_40));
   VCC  XLXI_19 (.P(XLXN_41));
endmodule
