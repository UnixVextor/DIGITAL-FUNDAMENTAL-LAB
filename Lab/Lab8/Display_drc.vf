////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Display_drc.vf
// /___/   /\     Timestamp : 10/19/2022 03:25:07
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: C:\Xilinx\14.7\ISE_DS\ISE\bin\nt64\unwrapped\sch2hdl.exe -intstyle ise -family spartan6 -verilog Display_drc.vf -w D:/DigitalSystem/Lab/Lab8/Display.sch
//Design Name: Display
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module M4_1E_HXILINX_Display (O, D0, D1, D2, D3, E, S0, S1);
    

   output O;

   input  D0;
   input  D1;
   input  D2;
   input  D3;
   input  E;
   input  S0;
   input  S1;

   reg O;

   always @ ( D0 or D1 or D2 or D3 or E or S0 or S1)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case({S1,S0})
        2'b00 : O <= D0;
        2'b01 : O <= D1;
        2'b10 : O <= D2;
        2'b11 : O <= D3;
        endcase
      end
   end
    
endmodule
`timescale  100 ps / 10 ps

module D2_4E_HXILINX_Display (D0, D1, D2, D3, A0, A1, E);
    

   output D0;
   output D1;
   output D2;
   output D3;

   input  A0;
   input  A1;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;

      always @ (A0 or A1 or E)
      begin
         if(!E)
           {D3, D2, D1, D0} <= 4'b0000;
        else
        begin
           case({A1,A0})
             2'b00 : {D3,D2,D1,D0} <= 4'b0001;
             2'b01 : {D3,D2,D1,D0} <= 4'b0010;
             2'b10 : {D3,D2,D1,D0} <= 4'b0100;
             2'b11 : {D3,D2,D1,D0} <= 4'b1000;
          endcase
        end
     end 

endmodule
`timescale 100 ps / 10 ps

module CB2CE_HXILINX_Display(CEO, Q0, Q1, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 2'b11;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q1, Q0} <= 2'b00;
	else if (CE)
	  {Q1,Q0} <= {Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q1,Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module Decoder1_3_MUSER_Display(S, 
                                Common);

    input [1:0] S;
   output [2:0] Common;
   
   wire XLXN_11;
   
   (* HU_SET = "XLXI_1_0" *) 
   D2_4E_HXILINX_Display  XLXI_1 (.A0(S[0]), 
                                 .A1(S[1]), 
                                 .E(XLXN_11), 
                                 .D0(Common[0]), 
                                 .D1(Common[1]), 
                                 .D2(Common[2]), 
                                 .D3());
   GND  XLXI_2 (.G(XLXN_11));
endmodule
`timescale 1ns / 1ps

module MUX12_4_MUSER_Display(A, 
                             B, 
                             C, 
                             S, 
                             O);

    input [3:0] A;
    input [3:0] B;
    input [3:0] C;
    input [1:0] S;
   output [3:0] O;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_27;
   
   (* HU_SET = "XLXI_1_1" *) 
   M4_1E_HXILINX_Display  XLXI_1 (.D0(A[0]), 
                                 .D1(B[0]), 
                                 .D2(C[0]), 
                                 .D3(XLXN_24), 
                                 .E(XLXN_1), 
                                 .S0(S[0]), 
                                 .S1(S[1]), 
                                 .O(O[0]));
   (* HU_SET = "XLXI_2_2" *) 
   M4_1E_HXILINX_Display  XLXI_2 (.D0(A[1]), 
                                 .D1(B[1]), 
                                 .D2(C[1]), 
                                 .D3(XLXN_25), 
                                 .E(XLXN_2), 
                                 .S0(S[0]), 
                                 .S1(S[1]), 
                                 .O(O[1]));
   (* HU_SET = "XLXI_3_3" *) 
   M4_1E_HXILINX_Display  XLXI_3 (.D0(A[2]), 
                                 .D1(B[2]), 
                                 .D2(C[2]), 
                                 .D3(XLXN_26), 
                                 .E(XLXN_3), 
                                 .S0(S[0]), 
                                 .S1(S[1]), 
                                 .O(O[2]));
   (* HU_SET = "XLXI_4_4" *) 
   M4_1E_HXILINX_Display  XLXI_4 (.D0(A[3]), 
                                 .D1(B[3]), 
                                 .D2(C[3]), 
                                 .D3(XLXN_27), 
                                 .E(XLXN_4), 
                                 .S0(S[0]), 
                                 .S1(S[1]), 
                                 .O(O[3]));
   VCC  XLXI_5 (.P(XLXN_1));
   VCC  XLXI_6 (.P(XLXN_2));
   VCC  XLXI_7 (.P(XLXN_3));
   VCC  XLXI_8 (.P(XLXN_4));
   GND  XLXI_9 (.G(XLXN_24));
   GND  XLXI_10 (.G(XLXN_25));
   GND  XLXI_11 (.G(XLXN_26));
   GND  XLXI_12 (.G(XLXN_27));
endmodule
`timescale 1ns / 1ps

module Display(A, 
               B, 
               C, 
               ScanCLK, 
               a, 
               b, 
               c, 
               Common, 
               Common3, 
               d, 
               e, 
               f, 
               g);

    input [3:0] A;
    input [3:0] B;
    input [3:0] C;
    input ScanCLK;
   output a;
   output b;
   output c;
   output [2:0] Common;
   output Common3;
   output d;
   output e;
   output f;
   output g;
   
   wire [3:0] O;
   wire [1:0] S;
   wire XLXN_3;
   wire XLXN_80;
   
   BCHextoSegment  XLXI_1 (.Q0(O[0]), 
                          .Q1(O[1]), 
                          .Q2(O[2]), 
                          .Q3(O[3]), 
                          .a(a), 
                          .b(b), 
                          .c(c), 
                          .d(d), 
                          .e(e), 
                          .f(f), 
                          .g(g));
   (* HU_SET = "XLXI_4_5" *) 
   CB2CE_HXILINX_Display  XLXI_4 (.C(ScanCLK), 
                                 .CE(XLXN_3), 
                                 .CLR(XLXN_80), 
                                 .CEO(), 
                                 .Q0(S[0]), 
                                 .Q1(S[1]), 
                                 .TC(XLXN_80));
   VCC  XLXI_5 (.P(XLXN_3));
   MUX12_4_MUSER_Display  XLXI_11 (.A(A[3:0]), 
                                  .B(B[3:0]), 
                                  .C(C[3:0]), 
                                  .S(S[1:0]), 
                                  .O(O[3:0]));
   VCC  XLXI_13 (.P(Common3));
   Decoder1_3_MUSER_Display  XLXI_14 (.S(S[1:0]), 
                                     .Common(Common[2:0]));
endmodule
