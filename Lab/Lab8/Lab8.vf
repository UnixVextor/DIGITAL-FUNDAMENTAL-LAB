////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Lab8.vf
// /___/   /\     Timestamp : 10/19/2022 13:45:58
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog D:/DigitalSystem/Lab/Lab8/Lab8.vf -w D:/DigitalSystem/Lab/Lab8/Lab8.sch
//Design Name: Lab8
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module INV4_HXILINX_Lab8 (O0, O1, O2, O3, I0, I1, I2, I3);
    

   output O0;
   output O1;
   output O2;
   output O3;

   input  I0;
   input  I1;
   input  I2;
   input  I3;

assign O0 = !I0;
assign O1 = !I1;
assign O2 = !I2;
assign O3 = !I3;

endmodule
`timescale  100 ps / 10 ps

module M4_1E_HXILINX_Lab8 (O, D0, D1, D2, D3, E, S0, S1);
    

   output O;

   input  D0;
   input  D1;
   input  D2;
   input  D3;
   input  E;
   input  S0;
   input  S1;

   reg O;

   always @ ( D0 or D1 or D2 or D3 or E or S0 or S1)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case({S1,S0})
        2'b00 : O <= D0;
        2'b01 : O <= D1;
        2'b10 : O <= D2;
        2'b11 : O <= D3;
        endcase
      end
   end
    
endmodule
`timescale  100 ps / 10 ps

module D2_4E_HXILINX_Lab8 (D0, D1, D2, D3, A0, A1, E);
    

   output D0;
   output D1;
   output D2;
   output D3;

   input  A0;
   input  A1;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;

      always @ (A0 or A1 or E)
      begin
         if(!E)
           {D3, D2, D1, D0} <= 4'b0000;
        else
        begin
           case({A1,A0})
             2'b00 : {D3,D2,D1,D0} <= 4'b0001;
             2'b01 : {D3,D2,D1,D0} <= 4'b0010;
             2'b10 : {D3,D2,D1,D0} <= 4'b0100;
             2'b11 : {D3,D2,D1,D0} <= 4'b1000;
          endcase
        end
     end 

endmodule
`timescale  100 ps / 10 ps

module AND8_HXILINX_Lab8 (O, I0, I1, I2, I3, I4, I5, I6, I7);
    

   output O;

   input I0;
   input I1;
   input I2;
   input I3;
   input I4;
   input I5;
   input I6;
   input I7;

assign O = I0 && I1 && I2 && I3 && I4 && I5 && I6 && I7;

endmodule
`timescale 100 ps / 10 ps

module CB2CE_HXILINX_Lab8(CEO, Q0, Q1, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 2'b11;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q1, Q0} <= 2'b00;
	else if (CE)
	  {Q1,Q0} <= {Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q1,Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module Decoder1_3_MUSER_Lab8(S, 
                             Common);

    input [1:0] S;
   output [2:0] Common;
   
   wire XLXN_11;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   
   (* HU_SET = "XLXI_1_0" *) 
   D2_4E_HXILINX_Lab8  XLXI_1 (.A0(S[0]), 
                              .A1(S[1]), 
                              .E(XLXN_11), 
                              .D0(XLXN_14), 
                              .D1(XLXN_15), 
                              .D2(XLXN_16), 
                              .D3());
   VCC  XLXI_3 (.P(XLXN_11));
   INV  XLXI_4 (.I(XLXN_14), 
               .O(Common[0]));
   INV  XLXI_5 (.I(XLXN_15), 
               .O(Common[1]));
   INV  XLXI_6 (.I(XLXN_16), 
               .O(Common[2]));
endmodule
`timescale 1ns / 1ps

module MUX12_4_MUSER_Lab8(A, 
                          B, 
                          C, 
                          S, 
                          O);

    input [3:0] A;
    input [3:0] B;
    input [3:0] C;
    input [1:0] S;
   output [3:0] O;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_27;
   
   (* HU_SET = "XLXI_1_1" *) 
   M4_1E_HXILINX_Lab8  XLXI_1 (.D0(A[0]), 
                              .D1(B[0]), 
                              .D2(C[0]), 
                              .D3(XLXN_24), 
                              .E(XLXN_1), 
                              .S0(S[0]), 
                              .S1(S[1]), 
                              .O(O[0]));
   (* HU_SET = "XLXI_2_2" *) 
   M4_1E_HXILINX_Lab8  XLXI_2 (.D0(A[1]), 
                              .D1(B[1]), 
                              .D2(C[1]), 
                              .D3(XLXN_25), 
                              .E(XLXN_2), 
                              .S0(S[0]), 
                              .S1(S[1]), 
                              .O(O[1]));
   (* HU_SET = "XLXI_3_3" *) 
   M4_1E_HXILINX_Lab8  XLXI_3 (.D0(A[2]), 
                              .D1(B[2]), 
                              .D2(C[2]), 
                              .D3(XLXN_26), 
                              .E(XLXN_3), 
                              .S0(S[0]), 
                              .S1(S[1]), 
                              .O(O[2]));
   (* HU_SET = "XLXI_4_4" *) 
   M4_1E_HXILINX_Lab8  XLXI_4 (.D0(A[3]), 
                              .D1(B[3]), 
                              .D2(C[3]), 
                              .D3(XLXN_27), 
                              .E(XLXN_4), 
                              .S0(S[0]), 
                              .S1(S[1]), 
                              .O(O[3]));
   VCC  XLXI_5 (.P(XLXN_1));
   VCC  XLXI_6 (.P(XLXN_2));
   VCC  XLXI_7 (.P(XLXN_3));
   VCC  XLXI_8 (.P(XLXN_4));
   GND  XLXI_9 (.G(XLXN_24));
   GND  XLXI_10 (.G(XLXN_25));
   GND  XLXI_11 (.G(XLXN_26));
   GND  XLXI_12 (.G(XLXN_27));
endmodule
`timescale 1ns / 1ps

module Display_MUSER_Lab8(A, 
                          B, 
                          C, 
                          ScanCLK, 
                          a, 
                          b, 
                          c, 
                          Common, 
                          Common3, 
                          d, 
                          e, 
                          f, 
                          g);

    input [3:0] A;
    input [3:0] B;
    input [3:0] C;
    input ScanCLK;
   output a;
   output b;
   output c;
   output [2:0] Common;
   output Common3;
   output d;
   output e;
   output f;
   output g;
   
   wire [3:0] O;
   wire [1:0] S;
   wire XLXN_3;
   wire XLXN_80;
   
   BCHextoSegment  XLXI_1 (.Q0(O[0]), 
                          .Q1(O[1]), 
                          .Q2(O[2]), 
                          .Q3(O[3]), 
                          .a(a), 
                          .b(b), 
                          .c(c), 
                          .d(d), 
                          .e(e), 
                          .f(f), 
                          .g(g));
   (* HU_SET = "XLXI_4_5" *) 
   CB2CE_HXILINX_Lab8  XLXI_4 (.C(ScanCLK), 
                              .CE(XLXN_3), 
                              .CLR(XLXN_80), 
                              .CEO(), 
                              .Q0(S[0]), 
                              .Q1(S[1]), 
                              .TC(XLXN_80));
   VCC  XLXI_5 (.P(XLXN_3));
   MUX12_4_MUSER_Lab8  XLXI_11 (.A(A[3:0]), 
                               .B(B[3:0]), 
                               .C(C[3:0]), 
                               .S(S[1:0]), 
                               .O(O[3:0]));
   VCC  XLXI_13 (.P(Common3));
   Decoder1_3_MUSER_Lab8  XLXI_14 (.S(S[1:0]), 
                                  .Common(Common[2:0]));
endmodule
`timescale 1ns / 1ps

module FullAdder8bit_MUSER_Lab8(A, 
                                B, 
                                D0, 
                                D1, 
                                D2);

    input [7:0] A;
    input [7:0] B;
   output [3:0] D0;
   output [3:0] D1;
   output [3:0] D2;
   
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_34;
   
   FullAdder  XLXI_3 (.A(A[1]), 
                     .B(B[1]), 
                     .Cin(XLXN_22), 
                     .Cout(XLXN_23), 
                     .S(D0[1]));
   FullAdder  XLXI_4 (.A(A[2]), 
                     .B(B[2]), 
                     .Cin(XLXN_23), 
                     .Cout(XLXN_24), 
                     .S(D0[2]));
   FullAdder  XLXI_5 (.A(A[3]), 
                     .B(B[3]), 
                     .Cin(XLXN_24), 
                     .Cout(XLXN_26), 
                     .S(D0[3]));
   FullAdder  XLXI_6 (.A(A[4]), 
                     .B(B[4]), 
                     .Cin(XLXN_26), 
                     .Cout(XLXN_27), 
                     .S(D1[0]));
   FullAdder  XLXI_7 (.A(A[5]), 
                     .B(B[5]), 
                     .Cin(XLXN_27), 
                     .Cout(XLXN_28), 
                     .S(D1[1]));
   FullAdder  XLXI_8 (.A(A[6]), 
                     .B(B[6]), 
                     .Cin(XLXN_28), 
                     .Cout(XLXN_29), 
                     .S(D1[2]));
   FullAdder  XLXI_9 (.A(A[7]), 
                     .B(B[7]), 
                     .Cin(XLXN_29), 
                     .Cout(D2[0]), 
                     .S(D1[3]));
   FullAdder  XLXI_10 (.A(A[0]), 
                      .B(B[0]), 
                      .Cin(XLXN_34), 
                      .Cout(XLXN_22), 
                      .S(D0[0]));
   GND  XLXI_11 (.G(XLXN_34));
   GND  XLXI_12 (.G(D2[1]));
   GND  XLXI_13 (.G(D2[2]));
   GND  XLXI_14 (.G(D2[3]));
endmodule
`timescale 1ns / 1ps

module Lab8(A, 
            B, 
            CLK, 
            a_P41, 
            Buzzer, 
            b_P40, 
            Common, 
            Common3, 
            c_P35, 
            d_P34, 
            e_P32, 
            f_P29, 
            g_P27);

    input [7:0] A;
    input [7:0] B;
    input CLK;
   output a_P41;
   output Buzzer;
   output b_P40;
   output [2:0] Common;
   output Common3;
   output c_P35;
   output d_P34;
   output e_P32;
   output f_P29;
   output g_P27;
   
   wire [3:0] D0;
   wire [3:0] D1;
   wire [3:0] XLXN_5;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   
   FullAdder8bit_MUSER_Lab8  XLXI_1 (.A(A[7:0]), 
                                    .B(B[7:0]), 
                                    .D0(D0[3:0]), 
                                    .D1(D1[3:0]), 
                                    .D2(XLXN_5[3:0]));
   div100k  XLXI_4 (.IP(CLK), 
                   .OP(XLXN_12));
   Display_MUSER_Lab8  XLXI_5 (.A(D0[3:0]), 
                              .B(D1[3:0]), 
                              .C(XLXN_5[3:0]), 
                              .ScanCLK(XLXN_12), 
                              .a(a_P41), 
                              .b(b_P40), 
                              .c(c_P35), 
                              .Common(Common[2:0]), 
                              .Common3(Common3), 
                              .d(d_P34), 
                              .e(e_P32), 
                              .f(f_P29), 
                              .g(g_P27));
   (* HU_SET = "XLXI_6_8" *) 
   AND8_HXILINX_Lab8  XLXI_6 (.I0(XLXN_17), 
                             .I1(XLXN_18), 
                             .I2(XLXN_19), 
                             .I3(XLXN_20), 
                             .I4(XLXN_13), 
                             .I5(XLXN_14), 
                             .I6(XLXN_15), 
                             .I7(XLXN_16), 
                             .O(Buzzer));
   (* HU_SET = "XLXI_8_6" *) 
   INV4_HXILINX_Lab8  XLXI_8 (.I0(D0[3]), 
                             .I1(D0[2]), 
                             .I2(D0[1]), 
                             .I3(D0[0]), 
                             .O0(XLXN_13), 
                             .O1(XLXN_14), 
                             .O2(XLXN_15), 
                             .O3(XLXN_16));
   (* HU_SET = "XLXI_9_7" *) 
   INV4_HXILINX_Lab8  XLXI_9 (.I0(D1[3]), 
                             .I1(D1[2]), 
                             .I2(D1[1]), 
                             .I3(D1[0]), 
                             .O0(XLXN_17), 
                             .O1(XLXN_18), 
                             .O2(XLXN_19), 
                             .O3(XLXN_20));
endmodule
