////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : MUX16_4.vf
// /___/   /\     Timestamp : 10/21/2022 01:40:57
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog D:/DigitalSystem/Lab/Lab7/MUX16_4.vf -w D:/DigitalSystem/Lab/Lab7/MUX16_4.sch
//Design Name: MUX16_4
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module CB4CE_HXILINX_MUX16_4(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 4'b1111;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;
	else if (CE)
	  {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale  100 ps / 10 ps

module M4_1E_HXILINX_MUX16_4 (O, D0, D1, D2, D3, E, S0, S1);
    

   output O;

   input  D0;
   input  D1;
   input  D2;
   input  D3;
   input  E;
   input  S0;
   input  S1;

   reg O;

   always @ ( D0 or D1 or D2 or D3 or E or S0 or S1)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case({S1,S0})
        2'b00 : O <= D0;
        2'b01 : O <= D1;
        2'b10 : O <= D2;
        2'b11 : O <= D3;
        endcase
      end
   end
    
endmodule
`timescale 1ns / 1ps

module MUX16_4(CLK, 
               M1, 
               M2, 
               S1, 
               S2, 
               Op);

    input CLK;
    input [3:0] M1;
    input [3:0] M2;
    input [3:0] S1;
    input [3:0] S2;
   output [3:0] Op;
   
   wire XLXN_15;
   wire XLXN_37;
   wire XLXN_38;
   wire XLXN_39;
   wire XLXN_40;
   wire XLXN_59;
   wire XLXN_60;
   wire XLXN_67;
   wire XLXN_68;
   
   (* HU_SET = "XLXI_1_0" *) 
   M4_1E_HXILINX_MUX16_4  XLXI_1 (.D0(S2[3]), 
                                 .D1(S1[3]), 
                                 .D2(M2[3]), 
                                 .D3(M1[3]), 
                                 .E(XLXN_37), 
                                 .S0(XLXN_60), 
                                 .S1(XLXN_59), 
                                 .O(Op[3]));
   (* HU_SET = "XLXI_2_1" *) 
   M4_1E_HXILINX_MUX16_4  XLXI_2 (.D0(S2[2]), 
                                 .D1(S1[2]), 
                                 .D2(M2[2]), 
                                 .D3(M1[2]), 
                                 .E(XLXN_38), 
                                 .S0(XLXN_60), 
                                 .S1(XLXN_59), 
                                 .O(Op[2]));
   (* HU_SET = "XLXI_3_2" *) 
   M4_1E_HXILINX_MUX16_4  XLXI_3 (.D0(S2[1]), 
                                 .D1(S1[1]), 
                                 .D2(M2[1]), 
                                 .D3(M1[1]), 
                                 .E(XLXN_39), 
                                 .S0(XLXN_60), 
                                 .S1(XLXN_59), 
                                 .O(Op[1]));
   (* HU_SET = "XLXI_4_3" *) 
   M4_1E_HXILINX_MUX16_4  XLXI_4 (.D0(S2[0]), 
                                 .D1(S1[0]), 
                                 .D2(M2[0]), 
                                 .D3(M1[0]), 
                                 .E(XLXN_40), 
                                 .S0(XLXN_60), 
                                 .S1(XLXN_59), 
                                 .O(Op[0]));
   VCC  XLXI_5 (.P(XLXN_15));
   VCC  XLXI_9 (.P(XLXN_37));
   VCC  XLXI_10 (.P(XLXN_38));
   VCC  XLXI_11 (.P(XLXN_39));
   VCC  XLXI_12 (.P(XLXN_40));
   (* HU_SET = "XLXI_14_4" *) 
   CB4CE_HXILINX_MUX16_4  XLXI_14 (.C(CLK), 
                                  .CE(XLXN_15), 
                                  .CLR(XLXN_67), 
                                  .CEO(), 
                                  .Q0(XLXN_60), 
                                  .Q1(XLXN_59), 
                                  .Q2(XLXN_68), 
                                  .Q3(), 
                                  .TC());
   AND3B1  XLXI_15 (.I0(XLXN_59), 
                   .I1(XLXN_60), 
                   .I2(XLXN_68), 
                   .O(XLXN_67));
endmodule
