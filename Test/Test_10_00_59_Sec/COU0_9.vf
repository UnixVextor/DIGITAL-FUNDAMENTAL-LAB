////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : COU0_9.vf
// /___/   /\     Timestamp : 10/08/2022 23:05:33
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/Users/XickZenF5/Desktop/DigitalLab081065/DigitalLab/LabTestSecond/COU0_9.vf -w C:/Users/XickZenF5/Desktop/DigitalLab081065/DigitalLab/LabTestSecond/COU0_9.sch
//Design Name: COU0_9
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FJKC_HXILINX_COU0_9(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale 1ns / 1ps

module COU0_9(CLR, 
              CLRR, 
              SW_CLK, 
              AAA, 
              BB, 
              CCC, 
              DDD, 
              XLXN_18);

    input CLR;
    input CLRR;
    input SW_CLK;
   output AAA;
   output BB;
   output CCC;
   output DDD;
   output XLXN_18;
   
   wire BBB;
   wire OUTCLK;
   wire XLXN_1;
   wire XLXN_5;
   wire XLXN_42;
   wire XLXN_49;
   wire XLXN_52;
   wire XLXN_56;
   wire DDD_DUMMY;
   wire CCC_DUMMY;
   wire AAA_DUMMY;
   
   assign AAA = AAA_DUMMY;
   assign CCC = CCC_DUMMY;
   assign DDD = DDD_DUMMY;
   (* HU_SET = "XLXI_1_16" *) 
   FJKC_HXILINX_COU0_9  XLXI_1 (.C(XLXN_1), 
                               .CLR(XLXN_56), 
                               .J(XLXN_5), 
                               .K(XLXN_5), 
                               .Q(AAA_DUMMY));
   (* HU_SET = "XLXI_2_17" *) 
   FJKC_HXILINX_COU0_9  XLXI_2 (.C(XLXN_1), 
                               .CLR(XLXN_56), 
                               .J(XLXN_49), 
                               .K(XLXN_49), 
                               .Q(DDD_DUMMY));
   (* HU_SET = "XLXI_3_18" *) 
   FJKC_HXILINX_COU0_9  XLXI_3 (.C(XLXN_1), 
                               .CLR(XLXN_56), 
                               .J(BBB), 
                               .K(BBB), 
                               .Q(CCC_DUMMY));
   (* HU_SET = "XLXI_4_19" *) 
   FJKC_HXILINX_COU0_9  XLXI_4 (.C(XLXN_1), 
                               .CLR(XLXN_56), 
                               .J(AAA_DUMMY), 
                               .K(AAA_DUMMY), 
                               .Q(BBB));
   VCC  XLXI_5 (.P(XLXN_5));
   AND2  XLXI_15 (.I0(CLRR), 
                 .I1(XLXN_42), 
                 .O(XLXN_52));
   AND2  XLXI_16 (.I0(SW_CLK), 
                 .I1(CLR), 
                 .O(XLXN_1));
   AND2  XLXI_17 (.I0(BBB), 
                 .I1(DDD_DUMMY), 
                 .O(OUTCLK));
   VCC  XLXI_18 (.P(XLXN_42));
   AND2  XLXI_19 (.I0(BBB), 
                 .I1(AAA_DUMMY), 
                 .O(BBB));
   AND3  XLXI_20 (.I0(CCC_DUMMY), 
                 .I1(BBB), 
                 .I2(AAA_DUMMY), 
                 .O(XLXN_49));
   OR2  XLXI_21 (.I0(OUTCLK), 
                .I1(XLXN_52), 
                .O(XLXN_56));
   BUF  XLXI_22 (.I(OUTCLK), 
                .O(XLXN_18));
   BUF  XLXI_23 (.I(BBB), 
                .O(BB));
endmodule
