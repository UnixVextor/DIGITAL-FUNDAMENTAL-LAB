////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : count0_5.vf
// /___/   /\     Timestamp : 11/25/2022 22:24:43
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/Users/mojik/Downloads/counter0_9/counter0_9/count0_5.vf -w C:/Users/mojik/Downloads/counter0_9/counter0_9/count0_5.sch
//Design Name: count0_5
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module CD4CE_HXILINX_count0_5(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   parameter TERMINAL_COUNT = 4'b1001;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;

	else if (CE)
          begin
             if ({Q3,Q2,Q1,Q0} == 4'b1001)
               {Q3,Q2,Q1,Q0} <= 4'b0000;
             else if({Q3,Q2,Q1,Q0} == 4'b1011)
               {Q3,Q2,Q1,Q0} <= 4'b0110;
             else if({Q3,Q2,Q1,Q0} == 4'b1101)
               {Q3,Q2,Q1,Q0} <= 4'b0100;
             else if({Q3,Q2,Q1,Q0} == 4'b1111)
               {Q3,Q2,Q1,Q0} <= 4'b0010;
            
             else
	      {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
          end
     end
   
   assign CEO = TC & CE;
   assign TC = CLR ? 1'b0 : ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 100 ps / 10 ps

module FJKC_HXILINX_count0_5(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale 1ns / 1ps

module mod10_MUSER_count0_5(CLK_Freq_input, 
                            Outputt);

    input CLK_Freq_input;
   output Outputt;
   
   wire XLXN_2;
   wire XLXN_4;
   wire XLXN_10;
   wire XLXN_13;
   wire XLXN_16;
   wire XLXN_23;
   wire XLXN_24;
   wire Outputt_DUMMY;
   
   assign Outputt = Outputt_DUMMY;
   (* HU_SET = "XLXI_1_0" *) 
   FJKC_HXILINX_count0_5  XLXI_1 (.C(CLK_Freq_input), 
                                 .CLR(Outputt_DUMMY), 
                                 .J(XLXN_2), 
                                 .K(XLXN_2), 
                                 .Q(XLXN_4));
   (* HU_SET = "XLXI_2_1" *) 
   FJKC_HXILINX_count0_5  XLXI_2 (.C(CLK_Freq_input), 
                                 .CLR(Outputt_DUMMY), 
                                 .J(XLXN_4), 
                                 .K(XLXN_4), 
                                 .Q(XLXN_23));
   (* HU_SET = "XLXI_3_2" *) 
   FJKC_HXILINX_count0_5  XLXI_3 (.C(CLK_Freq_input), 
                                 .CLR(Outputt_DUMMY), 
                                 .J(XLXN_10), 
                                 .K(XLXN_10), 
                                 .Q(XLXN_13));
   (* HU_SET = "XLXI_4_3" *) 
   FJKC_HXILINX_count0_5  XLXI_4 (.C(CLK_Freq_input), 
                                 .CLR(Outputt_DUMMY), 
                                 .J(XLXN_16), 
                                 .K(XLXN_16), 
                                 .Q(XLXN_24));
   VCC  XLXI_5 (.P(XLXN_2));
   AND2  XLXI_6 (.I0(XLXN_4), 
                .I1(XLXN_23), 
                .O(XLXN_10));
   AND2  XLXI_7 (.I0(XLXN_24), 
                .I1(XLXN_23), 
                .O(Outputt_DUMMY));
   AND3  XLXI_8 (.I0(XLXN_4), 
                .I1(XLXN_23), 
                .I2(XLXN_13), 
                .O(XLXN_16));
endmodule
`timescale 1ns / 1ps

module sevenSegja_MUSER_count0_5(D0, 
                                 D1, 
                                 D2, 
                                 D3, 
                                 a_P41, 
                                 b_P40, 
                                 c_P35, 
                                 d_P34, 
                                 e_P32, 
                                 f_P29, 
                                 g_P27);

    input D0;
    input D1;
    input D2;
    input D3;
   output a_P41;
   output b_P40;
   output c_P35;
   output d_P34;
   output e_P32;
   output f_P29;
   output g_P27;
   
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_15;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_32;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_35;
   wire XLXN_36;
   wire XLXN_37;
   wire XLXN_38;
   wire XLXN_39;
   wire XLXN_40;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_50;
   wire XLXN_51;
   wire XLXN_52;
   wire XLXN_53;
   wire XLXN_54;
   wire XLXN_55;
   wire XLXN_56;
   wire XLXN_57;
   
   AND2  XLXI_1 (.I0(XLXN_12), 
                .I1(XLXN_11), 
                .O(XLXN_13));
   AND2  XLXI_3 (.I0(D0), 
                .I1(D2), 
                .O(XLXN_15));
   AND2  XLXI_4 (.I0(XLXN_29), 
                .I1(XLXN_28), 
                .O(XLXN_26));
   AND2  XLXI_5 (.I0(D0), 
                .I1(D1), 
                .O(XLXN_27));
   AND2  XLXI_6 (.I0(XLXN_36), 
                .I1(XLXN_35), 
                .O(XLXN_31));
   AND2  XLXI_7 (.I0(D1), 
                .I1(XLXN_37), 
                .O(XLXN_32));
   AND2  XLXI_8 (.I0(XLXN_38), 
                .I1(D1), 
                .O(XLXN_33));
   AND2  XLXI_10 (.I0(XLXN_43), 
                 .I1(XLXN_42), 
                 .O(XLXN_40));
   AND2  XLXI_11 (.I0(XLXN_44), 
                 .I1(D1), 
                 .O(XLXN_41));
   AND2  XLXI_12 (.I0(XLXN_52), 
                 .I1(XLXN_51), 
                 .O(XLXN_45));
   AND2  XLXI_13 (.I0(XLXN_53), 
                 .I1(D2), 
                 .O(XLXN_46));
   AND2  XLXI_14 (.I0(XLXN_54), 
                 .I1(D2), 
                 .O(XLXN_47));
   AND2  XLXI_15 (.I0(D1), 
                 .I1(XLXN_55), 
                 .O(XLXN_48));
   AND2  XLXI_16 (.I0(XLXN_56), 
                 .I1(D2), 
                 .O(XLXN_49));
   AND2  XLXI_17 (.I0(XLXN_57), 
                 .I1(D2), 
                 .O(XLXN_50));
   INV  XLXI_141 (.I(D2), 
                 .O(XLXN_11));
   INV  XLXI_142 (.I(D0), 
                 .O(XLXN_12));
   INV  XLXI_144 (.I(D2), 
                 .O(XLXN_25));
   INV  XLXI_145 (.I(D1), 
                 .O(XLXN_28));
   INV  XLXI_151 (.I(D0), 
                 .O(XLXN_29));
   INV  XLXI_152 (.I(D1), 
                 .O(XLXN_30));
   INV  XLXI_153 (.I(D2), 
                 .O(XLXN_35));
   INV  XLXI_154 (.I(D0), 
                 .O(XLXN_36));
   INV  XLXI_155 (.I(D2), 
                 .O(XLXN_37));
   INV  XLXI_166 (.I(D0), 
                 .O(XLXN_38));
   INV  XLXI_167 (.I(D1), 
                 .O(XLXN_39));
   INV  XLXI_168 (.I(D2), 
                 .O(XLXN_42));
   INV  XLXI_169 (.I(D0), 
                 .O(XLXN_43));
   INV  XLXI_170 (.I(D0), 
                 .O(XLXN_44));
   INV  XLXI_171 (.I(D1), 
                 .O(XLXN_51));
   INV  XLXI_172 (.I(D0), 
                 .O(XLXN_52));
   INV  XLXI_173 (.I(D1), 
                 .O(XLXN_53));
   INV  XLXI_174 (.I(D0), 
                 .O(XLXN_54));
   INV  XLXI_175 (.I(D2), 
                 .O(XLXN_55));
   INV  XLXI_186 (.I(D1), 
                 .O(XLXN_56));
   INV  XLXI_187 (.I(D0), 
                 .O(XLXN_57));
   OR4  XLXI_253 (.I0(D3), 
                 .I1(XLXN_15), 
                 .I2(D1), 
                 .I3(XLXN_13), 
                 .O(a_P41));
   OR3  XLXI_254 (.I0(XLXN_27), 
                 .I1(XLXN_26), 
                 .I2(XLXN_25), 
                 .O(b_P40));
   OR5  XLXI_255 (.I0(D3), 
                 .I1(XLXN_34), 
                 .I2(XLXN_33), 
                 .I3(XLXN_32), 
                 .I4(XLXN_31), 
                 .O(d_P34));
   OR2  XLXI_256 (.I0(XLXN_41), 
                 .I1(XLXN_40), 
                 .O(e_P32));
   OR4  XLXI_257 (.I0(D3), 
                 .I1(XLXN_47), 
                 .I2(XLXN_46), 
                 .I3(XLXN_45), 
                 .O(f_P29));
   OR4  XLXI_258 (.I0(D3), 
                 .I1(XLXN_50), 
                 .I2(XLXN_49), 
                 .I3(XLXN_48), 
                 .O(g_P27));
   OR3  XLXI_293 (.I0(D2), 
                 .I1(D0), 
                 .I2(XLXN_30), 
                 .O(c_P35));
   AND3  XLXI_322 (.I0(D0), 
                  .I1(XLXN_39), 
                  .I2(D2), 
                  .O(XLXN_34));
endmodule
`timescale 1ns / 1ps

module count0_5(BT_P47, 
                CLK_P123, 
                a_P41, 
                Buz, 
                b_P40, 
                common1_P44, 
                com1_P43, 
                com2_P33, 
                com3_P30, 
                c_P35, 
                d_P34, 
                e_P32, 
                f_P29, 
                g_P27);

    input BT_P47;
    input CLK_P123;
   output a_P41;
   output Buz;
   output b_P40;
   output common1_P44;
   output com1_P43;
   output com2_P33;
   output com3_P30;
   output c_P35;
   output d_P34;
   output e_P32;
   output f_P29;
   output g_P27;
   
   wire XLXN_11;
   wire XLXN_35;
   wire XLXN_74;
   wire XLXN_105;
   wire XLXN_106;
   wire XLXN_107;
   wire XLXN_108;
   wire XLXN_109;
   wire XLXN_188;
   wire XLXN_208;
   wire XLXN_209;
   wire XLXN_224;
   wire XLXN_225;
   wire XLXN_229;
   wire XLXN_230;
   wire XLXN_231;
   
   (* HU_SET = "XLXI_1_4" *) 
   CD4CE_HXILINX_count0_5  XLXI_1 (.C(XLXN_209), 
                                  .CE(XLXN_11), 
                                  .CLR(XLXN_188), 
                                  .CEO(), 
                                  .Q0(XLXN_229), 
                                  .Q1(XLXN_230), 
                                  .Q2(XLXN_231), 
                                  .Q3(), 
                                  .TC());
   VCC  XLXI_9 (.P(XLXN_11));
   GND  XLXI_16 (.G(XLXN_35));
   sevenSegja_MUSER_count0_5  XLXI_17 (.D0(XLXN_225), 
                                      .D1(XLXN_230), 
                                      .D2(XLXN_231), 
                                      .D3(XLXN_35), 
                                      .a_P41(a_P41), 
                                      .b_P40(b_P40), 
                                      .c_P35(c_P35), 
                                      .d_P34(d_P34), 
                                      .e_P32(e_P32), 
                                      .f_P29(f_P29), 
                                      .g_P27(g_P27));
   AND2  XLXI_18 (.I0(BT_P47), 
                 .I1(CLK_P123), 
                 .O(XLXN_74));
   GND  XLXI_19 (.G(common1_P44));
   VCC  XLXI_20 (.P(com1_P43));
   VCC  XLXI_21 (.P(com2_P33));
   VCC  XLXI_22 (.P(com3_P30));
   mod10_MUSER_count0_5  XLXI_37 (.CLK_Freq_input(XLXN_74), 
                                 .Outputt(XLXN_105));
   mod10_MUSER_count0_5  XLXI_38 (.CLK_Freq_input(XLXN_105), 
                                 .Outputt(XLXN_106));
   mod10_MUSER_count0_5  XLXI_51 (.CLK_Freq_input(XLXN_106), 
                                 .Outputt(XLXN_107));
   mod10_MUSER_count0_5  XLXI_52 (.CLK_Freq_input(XLXN_107), 
                                 .Outputt(XLXN_108));
   mod10_MUSER_count0_5  XLXI_53 (.CLK_Freq_input(XLXN_108), 
                                 .Outputt(XLXN_109));
   mod10_MUSER_count0_5  XLXI_54 (.CLK_Freq_input(XLXN_109), 
                                 .Outputt(XLXN_208));
   AND3B1  XLXI_84 (.I0(XLXN_229), 
                   .I1(XLXN_231), 
                   .I2(XLXN_230), 
                   .O(XLXN_188));
   mod10_MUSER_count0_5  XLXI_88 (.CLK_Freq_input(XLXN_208), 
                                 .Outputt(XLXN_209));
   OR2  XLXI_93 (.I0(XLXN_229), 
                .I1(XLXN_224), 
                .O(XLXN_225));
   AND3B1  XLXI_94 (.I0(XLXN_230), 
                   .I1(XLXN_229), 
                   .I2(XLXN_231), 
                   .O(Buz));
   AND3B3  XLXI_95 (.I0(XLXN_229), 
                   .I1(XLXN_230), 
                   .I2(XLXN_231), 
                   .O(XLXN_224));
endmodule
