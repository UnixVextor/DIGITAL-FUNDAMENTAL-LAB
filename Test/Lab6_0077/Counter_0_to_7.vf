////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Counter_0_to_7.vf
// /___/   /\     Timestamp : 11/25/2022 23:39:14
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/Users/XickZenF5/Desktop/DigitalLab081065/DigitalLab/Lab6_0077/Counter_0_to_7.vf -w C:/Users/XickZenF5/Desktop/DigitalLab081065/DigitalLab/Lab6_0077/Counter_0_to_7.sch
//Design Name: Counter_0_to_7
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module CD4CE_HXILINX_Counter_0_to_7(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   parameter TERMINAL_COUNT = 4'b1001;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;

	else if (CE)
          begin
             if ({Q3,Q2,Q1,Q0} == 4'b1001)
               {Q3,Q2,Q1,Q0} <= 4'b0000;
             else if({Q3,Q2,Q1,Q0} == 4'b1011)
               {Q3,Q2,Q1,Q0} <= 4'b0110;
             else if({Q3,Q2,Q1,Q0} == 4'b1101)
               {Q3,Q2,Q1,Q0} <= 4'b0100;
             else if({Q3,Q2,Q1,Q0} == 4'b1111)
               {Q3,Q2,Q1,Q0} <= 4'b0010;
            
             else
	      {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
          end
     end
   
   assign CEO = TC & CE;
   assign TC = CLR ? 1'b0 : ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module Counter_0_to_7(CLK, 
                      CLK_IN_VCC, 
                      Reset, 
                      A, 
                      B, 
                      C, 
                      TC);

    input CLK;
    input CLK_IN_VCC;
    input Reset;
   output A;
   output B;
   output C;
   output TC;
   
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_41;
   wire XLXN_43;
   wire XLXN_44;
   wire A_DUMMY;
   wire B_DUMMY;
   wire C_DUMMY;
   
   assign A = A_DUMMY;
   assign B = B_DUMMY;
   assign C = C_DUMMY;
   (* HU_SET = "XLXI_4_1" *) 
   CD4CE_HXILINX_Counter_0_to_7  XLXI_4 (.C(CLK), 
                                        .CE(CLK_IN_VCC), 
                                        .CLR(XLXN_43), 
                                        .CEO(), 
                                        .Q0(A_DUMMY), 
                                        .Q1(B_DUMMY), 
                                        .Q2(C_DUMMY), 
                                        .Q3(XLXN_41), 
                                        .TC(TC));
   AND4  XLXI_6 (.I0(XLXN_41), 
                .I1(XLXN_15), 
                .I2(XLXN_14), 
                .I3(XLXN_13), 
                .O(XLXN_44));
   INV  XLXI_8 (.I(A_DUMMY), 
               .O(XLXN_13));
   INV  XLXI_9 (.I(B_DUMMY), 
               .O(XLXN_14));
   INV  XLXI_10 (.I(C_DUMMY), 
                .O(XLXN_15));
   OR2  XLXI_11 (.I0(XLXN_44), 
                .I1(Reset), 
                .O(XLXN_43));
endmodule
