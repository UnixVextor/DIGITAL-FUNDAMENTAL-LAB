////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : counter00_99_drc.vf
// /___/   /\     Timestamp : 10/08/2022 21:10:21
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: C:\Xilinx\14.7\ISE_DS\ISE\bin\nt64\unwrapped\sch2hdl.exe -intstyle ise -family spartan6 -verilog counter00_99_drc.vf -w D:/DigitalSystem/module/counte00_99/counter00_99.sch
//Design Name: counter00_99
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module CB4CE_HXILINX_counter00_99(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 4'b1111;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;
	else if (CE)
	  {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module counter00_99(PB3_P47, 
                    P50, 
                    A, 
                    B);

    input PB3_P47;
    input P50;
   output [3:0] A;
   output [3:0] B;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_87;
   wire XLXN_88;
   wire XLXN_89;
   wire XLXN_96;
   wire [3:0] A_DUMMY;
   wire [3:0] B_DUMMY;
   
   assign A[3:0] = A_DUMMY[3:0];
   assign B[3:0] = B_DUMMY[3:0];
   AND4  XLXI_1 (.I0(A_DUMMY[3]), 
                .I1(XLXN_1), 
                .I2(A_DUMMY[1]), 
                .I3(XLXN_2), 
                .O(XLXN_87));
   INV  XLXI_2 (.I(A_DUMMY[2]), 
               .O(XLXN_1));
   INV  XLXI_3 (.I(A_DUMMY[0]), 
               .O(XLXN_2));
   (* HU_SET = "XLXI_4_0" *) 
   CB4CE_HXILINX_counter00_99  XLXI_4 (.C(P50), 
                                      .CE(PB3_P47), 
                                      .CLR(XLXN_87), 
                                      .CEO(), 
                                      .Q0(A_DUMMY[0]), 
                                      .Q1(A_DUMMY[1]), 
                                      .Q2(A_DUMMY[2]), 
                                      .Q3(A_DUMMY[3]), 
                                      .TC());
   (* HU_SET = "XLXI_29_1" *) 
   CB4CE_HXILINX_counter00_99  XLXI_29 (.C(XLXN_87), 
                                       .CE(PB3_P47), 
                                       .CLR(XLXN_96), 
                                       .CEO(), 
                                       .Q0(B_DUMMY[0]), 
                                       .Q1(B_DUMMY[1]), 
                                       .Q2(B_DUMMY[2]), 
                                       .Q3(B_DUMMY[3]), 
                                       .TC());
   AND4  XLXI_41 (.I0(B_DUMMY[3]), 
                 .I1(XLXN_88), 
                 .I2(B_DUMMY[1]), 
                 .I3(XLXN_89), 
                 .O(XLXN_96));
   INV  XLXI_42 (.I(B_DUMMY[2]), 
                .O(XLXN_88));
   INV  XLXI_43 (.I(B_DUMMY[0]), 
                .O(XLXN_89));
endmodule
